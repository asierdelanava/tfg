input{
  udp {
    port => 514
  }
}

filter {
  grok {
    match => { "message" => "%{SYSLOGTIMESTAMP:ssh_timestamp} %{SYSLOGHOST:ssh_hostname} %{WORD:program}(?:\[%{POSINT:pid}\])?: %{GREEDYDATA:log_message}" }
  }
  if [log_message] =~ /^Accepted|Failed/ {
    grok {
      match => { "log_message" => "%{WORD:ActOrDeny} password for %{WORD:remote_user} from %{IP:client_ip} port %{NUMBER:port} ssh2"}
    }
    mutate {
      add_field => { "ssh_log_type" => "ActOrDeny" }
    }
  }
}

output {
  if [program] == "sshd" {
    elasticsearch {
      index => "index_syslog_ssh-%{+YYYY.MM.dd}"
      hosts => "${ELASTIC_HOSTS}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
    }
  }
  else {
    elasticsearch {
      index => "index_syslog_rest-%{+YYYY.MM.dd}"
      hosts => "${ELASTIC_HOSTS}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
    }
  }
}

